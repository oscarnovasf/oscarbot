{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}

{% if not bem %}
  {% if view_mode == '_custom' %}
    {% set bem = 'field-' ~ field_name|replace({'__': '-'})|clean_class %}
    {% set bem_element_prefix = bem ~ '__' %}
  {% else %}
    {% set bem = (entity_type ~ '-' ~ bundle ~ (view_mode != 'default' ? '-' ~ view_mode))|clean_class ~ '__' ~ field_name|replace({(bundle ~ '__'): ''})|clean_class %}
  {% endif %}
{% endif %}

{% set bem_element_prefix = bem_element_prefix ?: bem ~ '-' %}
{%
  set classes = classes ?: [
    bem
  ]
%}
{%
  set title_classes = [
    bem_element_prefix ~ 'label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

<div{{ attributes.addClass(classes) }}>
  {% block content %}
    {% block label %}
      {% if not label_hidden %}
        <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
      {% endif %}
    {% endblock %}
    {% block items %}
      {% set content_attributes_not_empty -%}{{ content_attributes }}{%- endset %}
      {% if (multiple and not label_hidden) or content_attributes_not_empty %}
        <div{{ content_attributes.addClass(bem_element_prefix ~ 'items') }}>
      {% endif %}
      {% for item in items %}
        {% block item %}
          {% set item_attributes_not_empty -%}{{ item.attributes }}{%- endset %}
          {% if multiple or item_attributes_not_empty %}
            <div{{ item.attributes.addClass(bem_element_prefix ~ 'item') }}>
          {% endif -%}
          {{- item.content -}}
          {% if multiple or item_attributes_not_empty %}
            </div>
          {% endif -%}
        {% endblock %}
      {% endfor %}
      {% if (multiple and not label_hidden) or content_attributes_not_empty %}
        </div>
      {% endif %}
    {% endblock %}
  {% endblock %}
</div>
